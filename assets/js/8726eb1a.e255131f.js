"use strict";(self.webpackChunktekdi_docs=self.webpackChunktekdi_docs||[]).push([[347],{24920:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"tools/javascript/eslint","title":"ESLint","description":"About","source":"@site/docs/tools/javascript/eslint.md","sourceDirName":"tools/javascript","slug":"/tools/javascript/eslint","permalink":"/docs/tools/javascript/eslint","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"javascript","permalink":"/docs/tags/javascript"},{"inline":true,"label":"linter","permalink":"/docs/tags/linter"},{"inline":true,"label":"formatter","permalink":"/docs/tags/formatter"},{"inline":true,"label":"fixer","permalink":"/docs/tags/fixer"},{"inline":true,"label":"ESLint","permalink":"/docs/tags/es-lint"},{"inline":true,"label":"styleguide","permalink":"/docs/tags/styleguide"}],"version":"current","lastUpdatedBy":"Manoj L","lastUpdatedAt":1747721545000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2,"tags":["javascript","linter","formatter","fixer","ESLint","styleguide"]},"sidebar":"tutorialSidebar","previous":{"title":"Javascript Tools","permalink":"/docs/category/javascript-tools"},"next":{"title":"Python Tools","permalink":"/docs/category/python-tools"}}');var s=t(74848),r=t(28453);const l={sidebar_position:2,tags:["javascript","linter","formatter","fixer","ESLint","styleguide"]},o="ESLint",a={},c=[{value:"About",id:"about",level:2},{value:"Links",id:"links",level:3},{value:"ESLint Plugins",id:"eslint-plugins",level:3},{value:"For TypeScript based projects:",id:"for-typescript-based-projects",level:4},{value:"For TypeScript based Nestjs (Nodejs) - projects",id:"for-typescript-based-nestjs-nodejs---projects",level:4},{value:"For React based projects:",id:"for-react-based-projects",level:4},{value:"For projects using prettier as formatting tool:",id:"for-projects-using-prettier-as-formatting-tool",level:4},{value:"Prettier",id:"prettier",level:5},{value:"ESLint plugins for Prettier",id:"eslint-plugins-for-prettier",level:5},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Installation for Angular projects",id:"installation-for-angular-projects",level:3},{value:"Installation for Nodejs - Expressjs projects",id:"installation-for-nodejs---expressjs-projects",level:3},{value:"Installation for Nodejs - Nestjs projects",id:"installation-for-nodejs---nestjs-projects",level:3},{value:"Installation for React projects using TypeScript",id:"installation-for-react-projects-using-typescript",level:3},{value:"Config file for eslint.config.js",id:"config-file-for-eslintconfigjs",level:2},{value:"Recommended ESLint configuration for Angular projects",id:"recommended-eslint-configuration-for-angular-projects",level:3},{value:"Recommended ESLint configuration for Nodejs - Expressjs projects",id:"recommended-eslint-configuration-for-nodejs---expressjs-projects",level:3},{value:"Recommended ESLint configuration for Nodejs - Nestjs projects",id:"recommended-eslint-configuration-for-nodejs---nestjs-projects",level:3},{value:"Recommended ESLint configuration for React projects using TypeScript",id:"recommended-eslint-configuration-for-react-projects-using-typescript",level:3},{value:"Recommended ESLint configuration for React Native projects",id:"recommended-eslint-configuration-for-react-native-projects",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"eslint",children:"ESLint"})}),"\n",(0,s.jsx)(n.h2,{id:"about",children:"About"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"ESLint is a static code analyser for Javasvcript code. It lets you find and fix problems in your JavaScript code"}),"\n",(0,s.jsx)(n.li,{children:"ESLint statically analyzes your code to quickly find problems. It is built into most text editors and you can run ESLint as part of your continuous integration pipeline."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"links",children:"Links"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://ESLint.org/",children:"ESLint Homepage"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://ESLint.org/play/",children:"ESLint Playground"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"eslint-plugins",children:"ESLint Plugins"}),"\n",(0,s.jsx)(n.p,{children:"Depending upon the project need or whether you are using React or Angular or Node, you may use different ESLint plugins:"}),"\n",(0,s.jsx)(n.h4,{id:"for-typescript-based-projects",children:"For TypeScript based projects:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/typescript-eslint",children:"typescript-eslint"}),": Tooling which enables you to use TypeScript with ESLint"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"for-typescript-based-nestjs-nodejs---projects",children:"For TypeScript based Nestjs (Nodejs) - projects"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/eslint-plugin-jsdoc",children:"eslint-plugin-jsdoc"}),": JSDoc linting rules for ESLint"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/eslint-plugin-security",children:"eslint-plugin-security"}),": ESLint rules for Node Security, helps identify potential security hotspots, but finds a lot of false positives which need triage by a human."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/eslint-plugin-sonarjs",children:"eslint-plugin-sonarjs"}),": eslint-plugin-sonarjs is an ESLint plugin maintained by Sonar, designed to help developers write Clean Code. This plugin exposes to ESLint users all original JS/TS rules from SonarJS, an analyzer for JavaScript and TypeScript within the Sonar ecosystem."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"for-react-based-projects",children:"For React based projects:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/eslint-plugin-react",children:"eslint-plugin-react"}),": Provides React specific linting rules for eslint"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/eslint-plugin-react-hooks",children:"eslint-plugin-react-hooks"}),": This ESLint plugin enforces the Rules of Hooks."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/eslint-plugin-react-refresh",children:"eslint-plugin-react-refresh"}),": This ESLint plugin validate that your components can safely be updated with Fast Refresh."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/eslint-plugin-jsx-a11y",children:"eslint-plugin-jsx-a11y"}),": This plugin runs Static AST checker for accessibility rules on JSX elements."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"for-projects-using-prettier-as-formatting-tool",children:"For projects using prettier as formatting tool:"}),"\n",(0,s.jsx)(n.h5,{id:"prettier",children:"Prettier"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/prettier",children:"prettier"}),": Prettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary."]}),"\n"]}),"\n",(0,s.jsx)(n.h5,{id:"eslint-plugins-for-prettier",children:"ESLint plugins for Prettier"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/eslint-config-prettier",children:"eslint-config-prettier"}),": Turns off all rules that are unnecessary or might conflict with Prettier."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/eslint-plugin-prettier",children:"eslint-plugin-prettier"}),": Runs Prettier as an ESLint rule and reports differences as individual ESLint issues."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Node.js (^18.18.0, ^20.9.0, or >=21.1.0) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.h3,{id:"installation-for-angular-projects",children:"Installation for Angular projects"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"@TODO\n"})}),"\n",(0,s.jsx)(n.h3,{id:"installation-for-nodejs---expressjs-projects",children:"Installation for Nodejs - Expressjs projects"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"@TODO\n"})}),"\n",(0,s.jsx)(n.h3,{id:"installation-for-nodejs---nestjs-projects",children:"Installation for Nodejs - Nestjs projects"}),"\n",(0,s.jsx)(n.p,{children:"Navigate to your project directory and install npm packages required for ESLint, ESLint plugins and configurations."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If using npm"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm install globals \\\neslint \\\n@eslint/js \\\n@eslint/eslintrc \\\ntypescript-eslint \\\neslint-plugin-jsdoc \\\neslint-plugin-security \\\neslint-plugin-sonarjs \\\nprettier \\\neslint-config-prettier \\\neslint-plugin-prettier \\\n--save-dev\n"})}),"\n",(0,s.jsx)(n.h3,{id:"installation-for-react-projects-using-typescript",children:"Installation for React projects using TypeScript"}),"\n",(0,s.jsx)(n.p,{children:"Navigate to your project directory and install npm packages required for ESLint, ESLint plugins and configurations."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If using npm"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm install globals \\\neslint @eslint/js typescript-eslint \\\neslint-plugin-react \\\neslint-plugin-react-hooks \\\neslint-plugin-react-refresh \\\neslint-plugin-jsx-a11y \\\nprettier eslint-config-prettier eslint-plugin-prettier \\\n--save-dev\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Or if using yarn"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"yarn add globals \\\neslint @eslint/js typescript-eslint \\\neslint-plugin-react \\\neslint-plugin-react-hooks \\\neslint-plugin-react-refresh \\\neslint-plugin-jsx-a11y \nprettier eslint-config-prettier eslint-plugin-prettier \\ \n--dev\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["Remember to save these as ",(0,s.jsx)(n.code,{children:"devDependencies"})," in your project."]})}),"\n",(0,s.jsx)(n.h2,{id:"config-file-for-eslintconfigjs",children:"Config file for eslint.config.js"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"From v8.21.0, eslint announced a new config system. In the new system, .eslintrc* is no longer used. eslint.config.js would be the default config file name. In eslint v8, the legacy system (.eslintrc*) would still be supported, while in eslint v9, only the new system would be supported."}),"\n",(0,s.jsx)(n.li,{children:"And from v8.23.0, eslint CLI starts to look up eslint.config.js. So, if your eslint is >=8.23.0, you're 100% ready to use the new config system."}),"\n",(0,s.jsxs)(n.li,{children:["You might want to check out the official blog posts,","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://eslint.org/blog/2022/08/new-config-system-part-1/",children:"https://eslint.org/blog/2022/08/new-config-system-part-1/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://eslint.org/blog/2022/08/new-config-system-part-2/",children:"https://eslint.org/blog/2022/08/new-config-system-part-2/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://eslint.org/blog/2022/08/new-config-system-part-3/",children:"https://eslint.org/blog/2022/08/new-config-system-part-3/"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Create and use a file named ",(0,s.jsx)(n.code,{children:"eslint.config.js"})," in your python project root folder"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"recommended-eslint-configuration-for-angular-projects",children:"Recommended ESLint configuration for Angular projects"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"@TODO\n"})}),"\n",(0,s.jsx)(n.h3,{id:"recommended-eslint-configuration-for-nodejs---expressjs-projects",children:"Recommended ESLint configuration for Nodejs - Expressjs projects"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"@TODO\n"})}),"\n",(0,s.jsx)(n.h3,{id:"recommended-eslint-configuration-for-nodejs---nestjs-projects",children:"Recommended ESLint configuration for Nodejs - Nestjs projects"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// @ts-check\nimport eslint from '@eslint/js';\nimport jsdoc from 'eslint-plugin-jsdoc';\nimport eslintPluginPrettierRecommended from 'eslint-plugin-prettier/recommended';\nimport securityPlugin from 'eslint-plugin-security';\nimport sonarjs from 'eslint-plugin-sonarjs';\nimport globals from 'globals';\nimport tseslint from 'typescript-eslint';\nconst { configs: securityConfigs } = securityPlugin;\n\nexport default tseslint.config(\n\t{\n\t\tignores: [\n\t\t\t'eslint.config.mjs',\n\t\t\t'node_modules',\n\t\t\t'**/node_modules/**',\n\t\t\t'**/*.js',\n\t\t\t'**/*.d.ts',\n\t\t],\n\t},\n\t// ESLint Configs\n\teslint.configs.recommended,\n\t...tseslint.configs.recommendedTypeChecked,\n\n\t// ESLint Plugins\n\t// Prettier plugin\n\teslintPluginPrettierRecommended,\n\n\t// JSdoc plugin\n\tjsdoc.configs['flat/recommended'],\n\n\t// Security plugin\n\tsecurityConfigs.recommended,\n\n\t// Sonar plugin\n\tsonarjs.configs.recommended,\n\n\t// Globals\n\t{\n\t\tlanguageOptions: {\n\t\t\tglobals: {\n\t\t\t\t...globals.node,\n\t\t\t\t...globals.jest,\n\t\t\t},\n\t\t\tecmaVersion: 5,\n\t\t\tsourceType: 'module',\n\t\t\tparserOptions: {\n\t\t\t\tproject: ['tsconfig.json', 'tsconfig.spec.json'],\n\t\t\t\tprojectService: true,\n\t\t\t\ttsconfigRootDir: import.meta.dirname,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tplugins: {},\n\t\trules: {\n\t\t\t// TypeScript Rules\n\t\t\t'@typescript-eslint/no-explicit-any': 'off',\n\t\t\t'@typescript-eslint/no-floating-promises': 'warn',\n\t\t\t'@typescript-eslint/no-unsafe-argument': 'warn',\n\n\t\t\t// JSdoc Rules\n\t\t\t'jsdoc/require-jsdoc': 'off',\n\n\t\t\t// EOL, Linebreak, and Indentation Rules\n\t\t\t'eol-last': ['error', 'always'],\n\t\t\t'linebreak-style': ['error', 'unix'],\n\t\t\t'no-trailing-spaces': 'error',\n\t\t\tindent: ['error', 'tab', { SwitchCase: 1 }],\n\n\t\t\t// Prettier and Indentation Rules\n\t\t\t'prettier/prettier': [\n\t\t\t\t'error',\n\t\t\t\t{\n\t\t\t\t\tarrowParens: 'always',\n\t\t\t\t\tendOfLine: 'lf',\n\t\t\t\t\tsemi: true,\n\t\t\t\t\tsingleQuote: true,\n\t\t\t\t\ttabWidth: 4,\n\t\t\t\t\ttrailingComma: 'es5',\n\t\t\t\t\tuseTabs: true,\n\t\t\t\t},\n\t\t\t],\n\n\t\t\t// Security Rules\n\t\t\t'security/detect-object-injection': 'warn',\n\n\t\t\t// Sonar Rules\n\t\t\t'sonarjs/no-duplicate-string': 'warn',\n\t\t},\n\t},\n);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"recommended-eslint-configuration-for-react-projects-using-typescript",children:"Recommended ESLint configuration for React projects using TypeScript"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import globals from 'globals';\nimport pluginJs from '@eslint/js';\nimport tseslint from 'typescript-eslint';\nimport pluginReact from 'eslint-plugin-react';\nimport pluginReactHooks from 'eslint-plugin-react-hooks';\nimport pluginReactRefresh from 'eslint-plugin-react-refresh';\nimport pluginJsxA11y from 'eslint-plugin-jsx-a11y';\nimport pluginEslintPrettieRecommendedConfig from 'eslint-plugin-prettier/recommended';\n\n/** @type {import('eslint').Linter.Config[]} */\nexport default [\n  {\n    files: ['**/*.{js,mjs,cjs,ts,jsx,tsx}'],\n  },\n  {\n    languageOptions: {\n      globals: {\n        ...globals.browser,\n      },\n    },\n  },\n  pluginJs.configs.recommended,\n  ...tseslint.configs.recommended,\n  pluginReact.configs.flat.recommended,\n  pluginJsxA11y.flatConfigs.recommended,\n  pluginEslintPrettieRecommendedConfig,\n  {\n    plugins: {\n      'react-hooks': pluginReactHooks,\n      'react-refresh': pluginReactRefresh,\n    },\n    settings: {\n      react: {\n        version: 'detect',\n      },\n    },\n    rules: {\n      'react-hooks/rules-of-hooks': 'error',\n      'react-hooks/exhaustive-deps': 'warn',\n      'react-refresh/only-export-components': 'warn',\n      // Prettier and Indentation Rules\n      'prettier/prettier': [\n        'error',\n        {\n          arrowParens: 'always',\n          endOfLine: 'lf',\n          semi: true,\n          singleQuote: true,\n          tabWidth: 4,\n          trailingComma: 'es5',\n          useTabs: true,\n        },\n      ],\n      indent: ['error', 'tab', { SwitchCase: 1 }],\n    },\n  },\n  {\n    // Optional: ignore specific files or patterns\n    ignores: ['**/node_modules/**', 'dist/**', 'build/**'],\n  },\n];\n"})}),"\n",(0,s.jsx)(n.h3,{id:"recommended-eslint-configuration-for-react-native-projects",children:"Recommended ESLint configuration for React Native projects"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"@TODO\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);