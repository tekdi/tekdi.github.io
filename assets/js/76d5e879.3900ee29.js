"use strict";(self.webpackChunktekdi_docs=self.webpackChunktekdi_docs||[]).push([[5514],{1824:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>a,default:()=>o,frontMatter:()=>n,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"todo-service/database-schema","title":"Database Schema","description":"Entities -Todo Management","source":"@site/docs/todo-service/6_database-schema.md","sourceDirName":"todo-service","slug":"/todo-service/database-schema","permalink":"/docs/todo-service/database-schema","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Architecture","permalink":"/docs/todo-service/architecture"},"next":{"title":"API Docs","permalink":"/docs/todo-service/api-docs"}}');var i=s(74848),r=s(28453);const n={sidebar_position:6},a="Database Schema",h={},c=[{value:"Entities -Todo Management",id:"entities--todo-management",level:2},{value:"Table: Todo",id:"table-todo",level:3}];function l(e){const t={h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"database-schema",children:"Database Schema"})}),"\n",(0,i.jsx)(t.h2,{id:"entities--todo-management",children:"Entities -Todo Management"}),"\n",(0,i.jsx)(t.h3,{id:"table-todo",children:"Table: Todo"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Column Name"}),(0,i.jsx)(t.th,{children:"Data Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"todo_id"}),(0,i.jsx)(t.td,{children:"uuid"}),(0,i.jsx)(t.td,{children:"Unique identifier for each todo task."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"asset_id"}),(0,i.jsx)(t.td,{children:"integer"}),(0,i.jsx)(t.td,{children:"ID of the related asset (optional)."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ordering"}),(0,i.jsx)(t.td,{children:"integer"}),(0,i.jsx)(t.td,{children:"Defines the order of tasks (defaults to 1)."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"state"}),(0,i.jsx)(t.td,{children:"state"}),(0,i.jsx)(t.td,{children:"Current state of the todo (custom enum type)."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"sender_msg"}),(0,i.jsx)(t.td,{children:"character varying"}),(0,i.jsx)(t.td,{children:"Message sent by the assigner to the assignee."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"context_id"}),(0,i.jsx)(t.td,{children:"uuid"}),(0,i.jsx)(t.td,{children:"ID representing the context related to the task."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"context"}),(0,i.jsx)(t.td,{children:"context"}),(0,i.jsx)(t.td,{children:"Context of the task (custom enum type)."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"assigned_by"}),(0,i.jsx)(t.td,{children:"uuid"}),(0,i.jsx)(t.td,{children:"User ID of the person assigning the task."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"assigned_to"}),(0,i.jsx)(t.td,{children:"uuid"}),(0,i.jsx)(t.td,{children:"User ID of the person to whom the task is assigned."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"start_date"}),(0,i.jsx)(t.td,{children:"timestamp with time zone"}),(0,i.jsx)(t.td,{children:"When the task should start."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"due_date"}),(0,i.jsx)(t.td,{children:"timestamp with time zone"}),(0,i.jsx)(t.td,{children:"Deadline by which the task should be completed."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"status"}),(0,i.jsx)(t.td,{children:"todo_status"}),(0,i.jsx)(t.td,{children:"Current status of the task (incomplete by default)."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"title"}),(0,i.jsx)(t.td,{children:"character varying"}),(0,i.jsx)(t.td,{children:"Title or summary of the task."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"type"}),(0,i.jsx)(t.td,{children:"character varying"}),(0,i.jsx)(t.td,{children:"Type of task, describing its nature (e.g., assign)."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"created_by"}),(0,i.jsx)(t.td,{children:"uuid"}),(0,i.jsx)(t.td,{children:"User ID of the task creator."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"updated_by"}),(0,i.jsx)(t.td,{children:"uuid"}),(0,i.jsx)(t.td,{children:"User ID of the person who last updated the task."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"created_at"}),(0,i.jsx)(t.td,{children:"timestamp with time zone"}),(0,i.jsx)(t.td,{children:"When the task was created."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"updated_at"}),(0,i.jsx)(t.td,{children:"timestamp with time zone"}),(0,i.jsx)(t.td,{children:"Last update timestamp of the task."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"ideal_time"}),(0,i.jsx)(t.td,{children:"time without time zone"}),(0,i.jsx)(t.td,{children:"Ideal time expected for task completion."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"spent_time"}),(0,i.jsx)(t.td,{children:"time without time zone"}),(0,i.jsx)(t.td,{children:"Actual time spent on the task."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"completion_date"}),(0,i.jsx)(t.td,{children:"timestamp with time zone"}),(0,i.jsx)(t.td,{children:"When the task was marked as completed (if applicable)."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"action_data"}),(0,i.jsx)(t.td,{children:"jsonb"}),(0,i.jsx)(t.td,{children:"Additional data related to the task in JSON format."})]})]})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Todo",src:s(68588).A+"",width:"931",height:"607"})})]})}function o(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},68588:(e,t,s)=>{s.d(t,{A:()=>d});const d=s.p+"assets/images/todoservice-61ef2839ba9140008b11002eed3e7356.png"}}]);