{
  "openapi": "3.0.0",
  "paths": {
    "/notification-templates": {
      "post": {
        "operationId": "NotificationEventsController_create",
        "summary": "Create Template",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "description": "User ID is required",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "The Description for the Post Body",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateEventDto" },
              "examples": {
                "CreateTemplateForAllNotification": {
                  "summary": "Create Template For All Notification",
                  "description": "Description for when an empty body is used",
                  "value": {
                    "context": "TEST",
                    "title": "If an admin/TL/Fc updates a learner’s profile, the Learner should receive a notification about the update.",
                    "key": "TEST_NOTIFY1",
                    "status": "published",
                    "email": {
                      "subject": "SCP Learner Account Credentials",
                      "body": "<html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></head><body><p>Dear {leranerName},</p><p>We are pleased to inform you that a learner account has been successfully created. Below are the login details:</p><p>Username: {userName}</p><p>Password: {password}</p></body></html>"
                    },
                    "push": {
                      "subject": "Block Reassignment",
                      "body": "You’ve been reassigned to a new block {blockName}. Check the app for updated details.",
                      "image": "This is image of Push",
                      "link": "This is navigate link of Push"
                    },
                    "sms": {
                      "subject": "Block Reassignment",
                      "body": "You’ve been reassigned to a new block {blockName}. Check the app for updated details."
                    }
                  },
                  "headers": {}
                },
                "CreateTemplateForEmail": {
                  "summary": "Create Template For Email",
                  "description": "Hello is used as the greeting",
                  "value": {
                    "context": "TEST",
                    "title": "If an admin/TL/Fc updates a learner’s profile, the Learner should receive a notification about the update.",
                    "key": "TEST_NOTIFY2",
                    "status": "published",
                    "email": {
                      "subject": "Profile Updated {leanerName}",
                      "body": "Learner {learnerName}'s profile has been updated. Review the details in the app."
                    }
                  },
                  "headers": {}
                },
                "CreateTemplateForPush": {
                  "summary": "Create Template For Push",
                  "description": "Hello is used as the greeting",
                  "value": {
                    "context": "TEST",
                    "title": "If an admin/TL/Fc updates a learner’s profile, the Learner should receive a notification about the update.",
                    "key": "TEST_NOTIFY1",
                    "status": "published",
                    "push": {
                      "subject": "Profile Updated",
                      "body": "Learner {learnerName}'s profile has been updated. Review the details in the app."
                    }
                  },
                  "headers": {}
                },
                "CreateTemplateForSMS": {
                  "summary": "Create Template For SMS",
                  "description": "Hello is used as the greeting",
                  "value": {
                    "context": "TEST",
                    "title": "If an admin/TL/Fc updates a learner’s profile, the Learner should receive a notification about the update.",
                    "key": "TEST_NOTIFY1",
                    "status": "published",
                    "sms": {
                      "subject": "Profile Updated",
                      "body": "Learner {learnerName}'s profile has been updated. Review the details in the app."
                    }
                  },
                  "headers": {}
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Template created successfully" },
          "400": { "description": "Invalid request" },
          "500": { "description": "Internal Server Error" }
        },
        "tags": ["Notification-Templates"],
        "security": [{ "access-token": [] }]
      }
    },
    "/notification-templates/list": {
      "post": {
        "operationId": "NotificationEventsController_getTemplates",
        "summary": "Template List",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SearchFilterDto" }
            }
          }
        },
        "responses": {
          "200": { "description": "Get template list" },
          "400": { "description": "Invalid request" },
          "500": { "description": "Internal Server Error" }
        },
        "tags": ["Notification-Templates"],
        "security": [{ "access-token": [] }]
      }
    },
    "/notification-templates/{id}": {
      "patch": {
        "operationId": "NotificationEventsController_updateEvent",
        "summary": "Update Template",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "example": "34",
            "schema": { "type": "number" }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "description": "User ID is required",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "The Description for the Post Body.",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateEventDto" },
              "examples": {
                "UpdateTemplateForAllNotification": {
                  "summary": "Update Template For All Notification",
                  "description": "For update for all three template",
                  "value": {
                    "context": "TEST",
                    "title": "If an admin/TL/Fc updates a learner’s profile, the Learner should receive a notification about the update.",
                    "key": "TEST_NOTIFY1",
                    "status": "published",
                    "email": {
                      "subject": "SCP Learner Account Credentials",
                      "body": "<html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></head><body><p>Dear {leranerName},</p><p>We are pleased to inform you that a learner account has been successfully created. Below are the login details:</p><p>Username: {userName}</p><p>Password: {password}</p></body></html>"
                    },
                    "push": {
                      "subject": "Block Reassignment",
                      "body": "You’ve been reassigned to a new block {blockName}. Check the app for updated details.",
                      "image": "This is image of Push",
                      "link": "This is navigate link of Push"
                    },
                    "sms": {
                      "subject": "Block Reassignment",
                      "body": "You’ve been reassigned to a new block {blockName}. Check the app for updated details."
                    }
                  },
                  "headers": {}
                },
                "UpdateTemplateForEmail": {
                  "summary": "Update Template For Email",
                  "description": "Update Template for Email",
                  "value": {
                    "context": "TEST",
                    "title": "If an admin/TL/Fc updates a learner’s profile, the Learner should receive a notification about the update.",
                    "key": "TEST_NOTIFY2",
                    "status": "published",
                    "email": {
                      "subject": "Profile Updated {leanerName}",
                      "body": "Learner {learnerName}'s profile has been updated. Review the details in the app."
                    }
                  },
                  "headers": {}
                },
                "UpdateTemplateForPush": {
                  "summary": "Update Template For Push",
                  "description": "Update template for push",
                  "value": {
                    "context": "TEST",
                    "title": "If an admin/TL/Fc updates a learner’s profile, the Learner should receive a notification about the update.",
                    "key": "TEST_NOTIFY1",
                    "status": "published",
                    "push": {
                      "subject": "Profile Updated",
                      "body": "Learner {learnerName}'s profile has been updated. Review the details in the app."
                    }
                  },
                  "headers": {}
                },
                "UpdateTemplateForSMS": {
                  "summary": "Update Template For SMS",
                  "description": "Update template for SMS",
                  "value": {
                    "context": "TEST",
                    "title": "If an admin/TL/Fc updates a learner’s profile, the Learner should receive a notification about the update.",
                    "key": "TEST_NOTIFY1",
                    "status": "published",
                    "sms": {
                      "subject": "Profile Updated",
                      "body": "Learner {learnerName}'s profile has been updated. Review the details in the app."
                    }
                  },
                  "headers": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "/Update Template for Notification" },
          "400": { "description": "Bad request" }
        },
        "tags": ["Notification-Templates"],
        "security": [{ "access-token": [] }]
      },
      "delete": {
        "operationId": "NotificationEventsController_deleteTemplate",
        "summary": "Template Delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Template delete successfully" },
          "404": { "description": "Template not found" }
        },
        "tags": ["Notification-Templates"],
        "security": [{ "access-token": [] }]
      }
    },
    "/notification/send": {
      "post": {
        "operationId": "NotificationController_sendNotification",
        "summary": "Send Notification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NotificationDto" }
            }
          }
        },
        "responses": {
          "200": { "description": "send notification successfully" },
          "400": { "description": "Invalid Request" },
          "500": { "description": "internal server error" }
        },
        "tags": ["Notification-send"],
        "security": [{ "access-token": [] }]
      }
    },
    "/notification/sendTopicNotification": {
      "post": {
        "operationId": "NotificationController_sendTopicNotification",
        "summary": "Send Topic Notification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TopicNotification" }
            }
          }
        },
        "responses": {
          "201": { "description": "Sunscribed the topic" },
          "400": { "description": "Invalid Request" },
          "500": { "description": "Server Error" }
        },
        "tags": ["Notification-send"],
        "security": [{ "access-token": [] }]
      }
    },
    "/queue": {
      "post": {
        "operationId": "NotificationQueueController_create",
        "summary": "Notification Queue Create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NotificationQueueDTO" }
            }
          }
        },
        "responses": {
          "201": { "description": "Created" },
          "400": { "description": "Invalid request" },
          "500": { "description": "Internal Server Error" }
        },
        "tags": ["Notification-queue"]
      }
    },
    "/queue/list": {
      "post": {
        "operationId": "NotificationQueueController_get",
        "summary": "Notification Queue List",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SearchQueueDTO" }
            }
          }
        },
        "responses": {
          "200": { "description": "Get Records from queue" },
          "400": { "description": "Ivalid Request" },
          "500": { "description": "Internal Server Error" }
        },
        "tags": ["Notification-queue"]
      }
    },
    "/queue/{id}": {
      "patch": {
        "operationId": "NotificationQueueController_update",
        "summary": "Notification Queue Update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NotificationDto" },
              "examples": {
                "SendEmailPushSMSNotification": {
                  "summary": "Send Notification For All three [email/push/sms]",
                  "description": "Description for when an empty body is used",
                  "value": {
                    "isQueue": false,
                    "context": "TEST",
                    "key": "TEST_NOTIFY1",
                    "replacements": { "{learnerName}": "John Doe" },
                    "push": {
                      "receipients": [
                        "ciR6tZXC4FP4J9F1UFPj3K8twmplIgtkzeBGak7MHJldI8NqmnlDIZ-uUKxw5B5WlNINWkAB7bdPFmoyb2aFtNy"
                      ]
                    },
                    "sms": { "receipients": ["9977445500"] },
                    "email": { "receipients": ["example.com"] }
                  },
                  "headers": {}
                },
                "SendEmailNotification": {
                  "summary": "Send Notification For Email",
                  "description": "Description for when an empty body is used",
                  "value": {
                    "isQueue": false,
                    "context": "TEST",
                    "key": "OnTestEnrolled",
                    "replacements": {
                      "{eventName}": "Event Reminder",
                      "{learnerName}": "John Doe"
                    },
                    "email": { "receipients": ["example.com"] }
                  },
                  "headers": {}
                },
                "SendPushNotification": {
                  "summary": "Send Notification For Push",
                  "description": "Description for when an empty body is used",
                  "value": {
                    "isQueue": false,
                    "context": "USER",
                    "key": "OFFLINE_SESSION_REMINDER_30_MIN_BEFORE",
                    "replacements": { "{sessionName}": "Science" },
                    "push": {
                      "receipients": [
                        "c_ZaMxFoxtx7HpclSLkuTcy5epQOL9DDBtYF5uC2JvSIHPl1hYHha-oc7QVgi1kVkxQwjUHiyO4oRbwqGEZRWyGYgsj-M",
                        "ciR6tZXC4FP4JZjdXqXWGv:APA9149F1UFPj3K8twmplIgtkzIZ-uUKxw5B5WlNINWkAB7bdPFmoyb2aFtNy",
                        "cxf-unu_pp28qxKAYKzmhg:APA91bEapmLbOpoFC7sELDiNwZRz8Z3YhW_4XThB3TYbZ6F8NOPVjrZOUaPvdEJ8"
                      ]
                    }
                  },
                  "headers": {}
                },
                "SendSMSNotification": {
                  "summary": "Send Notification for SMS",
                  "description": "Description for when an empty body is used",
                  "value": {
                    "isQueue": false,
                    "context": "TEST",
                    "key": "TEST_NOTIFY",
                    "replacements": {
                      "{eventName}": "Event Reminder",
                      "{learnerName}": "John Doe"
                    },
                    "sms": { "receipients": ["5566676750"] }
                  },
                  "headers": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Updated Sucessfully" },
          "400": { "description": "Invalid request" }
        },
        "tags": ["Notification-queue"]
      }
    },
    "/role-permission/create": {
      "post": {
        "operationId": "RolePermissionMappingController_createPermission",
        "summary": "Role Permission Mapping Create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolePermissionCreateDto"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["RolePermissionMapping"]
      }
    },
    "/role-permission/get": {
      "post": {
        "operationId": "RolePermissionMappingController_getPermission",
        "summary": "Role Permission Mapping Get",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["RolePermissionMapping"]
      }
    },
    "/role-permission/update": {
      "post": {
        "operationId": "RolePermissionMappingController_updatePermission",
        "summary": "Role Permission Mapping Update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RolePermissionCreateDto"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["RolePermissionMapping"]
      }
    },
    "/role-permission/delete": {
      "delete": {
        "operationId": "RolePermissionMappingController_deletePermission",
        "summary": "Role Permission Mapping Delete",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "type": "string" } } }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["RolePermissionMapping"]
      }
    }
  },
  "info": {
    "title": "Notification",
    "description": "The Notification API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "access-token": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    },
    "schemas": {
      "EmailDto": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "Email subject",
            "example": "New Event"
          },
          "body": {
            "type": "string",
            "example": "This is body of {#var0#} Notification",
            "description": "Email body"
          }
        },
        "required": ["subject", "body"]
      },
      "PushNotificationDto": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "Subject",
            "example": "New Event"
          },
          "body": {
            "type": "string",
            "description": "Body",
            "example": "This is body of Push"
          },
          "image": {
            "type": "string",
            "description": "https://images.unsplash.com/photo-1519389950473-47ba0277781c?fit=crop&w=800&h=600",
            "example": "This is image of Push"
          },
          "link": {
            "type": "string",
            "description": "link",
            "example": "This is navigate link of Push"
          }
        },
        "required": ["subject", "body", "image", "link"]
      },
      "SMSNotificationDto": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "Subject",
            "example": "This is SMS subject"
          },
          "body": {
            "type": "string",
            "description": "Body",
            "example": "This is body of SMS"
          }
        },
        "required": ["subject", "body"]
      },
      "CreateEventDto": {
        "type": "object",
        "properties": {
          "context": { "type": "string", "example": "EVENT" },
          "title": {
            "type": "string",
            "example": "This is title",
            "description": "Event title"
          },
          "key": {
            "type": "string",
            "example": "OnAfterAttendeeEnrolled",
            "description": "Event key"
          },
          "status": {
            "type": "string",
            "example": "published",
            "description": "Status"
          },
          "replacementTags": {
            "description": "replacementTags",
            "example": [
              {
                "name": "campaign.first_name",
                "description": "Name of Campaign Promoter"
              }
            ],
            "type": "array",
            "items": { "type": "string" }
          },
          "email": {
            "description": "Email",
            "allOf": [{ "$ref": "#/components/schemas/EmailDto" }]
          },
          "push": {
            "description": "Push details",
            "allOf": [{ "$ref": "#/components/schemas/PushNotificationDto" }]
          },
          "sms": {
            "description": "SMS details",
            "allOf": [{ "$ref": "#/components/schemas/SMSNotificationDto" }]
          }
        },
        "required": [
          "context",
          "title",
          "key",
          "status",
          "replacementTags",
          "email",
          "push",
          "sms"
        ]
      },
      "SearchDto": {
        "type": "object",
        "properties": {
          "context": { "type": "string", "example": "EVENT" },
          "key": { "type": "string", "example": "EVENT" }
        },
        "required": ["context", "key"]
      },
      "SearchFilterDto": {
        "type": "object",
        "properties": {
          "filters": {
            "description": "Filters for search",
            "allOf": [{ "$ref": "#/components/schemas/SearchDto" }]
          }
        },
        "required": ["filters"]
      },
      "UpdateEventDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "This is title",
            "description": "Event title"
          },
          "key": {
            "type": "string",
            "example": "OnAfterAttendeeEnrolled",
            "description": "Event key"
          },
          "replacementTags": {
            "description": "replacementTags",
            "example": [
              {
                "name": "campaign.first_name",
                "description": "Name of Campaign Promoter"
              }
            ],
            "type": "array",
            "items": { "type": "string" }
          },
          "status": {
            "type": "string",
            "example": "published",
            "description": "Status"
          },
          "email": {
            "description": "Email",
            "allOf": [{ "$ref": "#/components/schemas/EmailDto" }]
          },
          "push": {
            "description": "Push details",
            "allOf": [{ "$ref": "#/components/schemas/PushNotificationDto" }]
          },
          "sms": {
            "description": "SMS details",
            "allOf": [{ "$ref": "#/components/schemas/SMSNotificationDto" }]
          }
        },
        "required": [
          "title",
          "key",
          "replacementTags",
          "status",
          "email",
          "push",
          "sms"
        ]
      },
      "EmailDTO": {
        "type": "object",
        "properties": {
          "receipients": {
            "example": ["email1@example.com"],
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["receipients"]
      },
      "PushDTO": {
        "type": "object",
        "properties": {
          "receipients": {
            "example": [
              "d2ihU3WpBFeoeXWhXe03F5:APA91bFNTnRzqffOGjKWHMypfjHxH-H1tSO7-7V-eajz0YsomuA-mMDni4l9GAgR-ybrMh-g1fy6hVOknr0ThOBb7ttb_qnciS5hdsTQ8oPHjZLsa66kOLdzM9hiZJf1Iav9b0EvXTt4"
            ],
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["receipients"]
      },
      "SMSDTO": {
        "type": "object",
        "properties": {
          "receipients": {
            "example": ["1234567890"],
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "required": ["receipients"]
      },
      "NotificationDto": {
        "type": "object",
        "properties": {
          "isQueue": {
            "type": "boolean",
            "example": false,
            "description": "Define the way where we need to send notification "
          },
          "context": {
            "type": "string",
            "example": "EVENT",
            "description": "Context of the notification"
          },
          "key": {
            "type": "string",
            "example": "OnAfterAttendeeEnrolled",
            "description": "Key of the notification"
          },
          "replacements": {
            "type": "object",
            "description": "Dynamic replacements for template tags",
            "example": {
              "{eventName}": "How to use UI tools",
              "{userName}": "John Doe",
              "{courseTitle}": "How to use UI tools",
              "{contactEmail}": "support@example.com"
            }
          },
          "email": {
            "description": "Email notification details",
            "allOf": [{ "$ref": "#/components/schemas/EmailDTO" }]
          },
          "push": {
            "description": "Push notification details",
            "allOf": [{ "$ref": "#/components/schemas/PushDTO" }]
          },
          "sms": {
            "description": "SMS notification details",
            "allOf": [{ "$ref": "#/components/schemas/SMSDTO" }]
          }
        },
        "required": ["isQueue", "context", "key", "email", "push", "sms"]
      },
      "TopicNotification": {
        "type": "object",
        "properties": {
          "topic_name": { "type": "string", "example": "test2" },
          "title": {
            "type": "string",
            "example": "Hi...",
            "description": "Push notification title"
          },
          "body": {
            "type": "string",
            "example": "First Demo Push....",
            "description": "Push notification body"
          },
          "image": {
            "type": "string",
            "example": "https://picsum.photos/200",
            "description": "image"
          },
          "navigate_to": {
            "type": "string",
            "example": "https://google.com/",
            "description": "navigation link"
          }
        },
        "required": ["topic_name", "title", "body", "image", "navigate_to"]
      },
      "NotificationQueueDTO": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "example": "Email",
            "description": "Channel through which the notification is sent."
          },
          "context": {
            "type": "string",
            "example": "EVENT",
            "description": "Context of the notification."
          },
          "context_id": {
            "type": "number",
            "example": "12345",
            "description": "ID related to the context."
          },
          "subject": {
            "type": "string",
            "example": "New Event",
            "description": "Subject of the notification."
          },
          "body": {
            "type": "string",
            "example": "Hello, this is a notification.",
            "description": "Body content of the notification."
          },
          "recipient": {
            "type": "string",
            "example": "user@example.com",
            "description": "Recipient of the notification."
          },
          "expiry": {
            "format": "date-time",
            "type": "string",
            "example": "2024-04-10T12:00:00Z",
            "description": "Timestamp when the notification expires."
          }
        },
        "required": [
          "channel",
          "context",
          "context_id",
          "subject",
          "body",
          "recipient",
          "expiry"
        ]
      },
      "SearchQueueDTO": {
        "type": "object",
        "properties": {
          "channel": {
            "type": "string",
            "example": "Email",
            "description": "Channel through which the notification is sent."
          },
          "context": {
            "type": "string",
            "example": "EVENT",
            "description": "Context of the notification."
          },
          "status": {
            "type": "boolean",
            "example": true,
            "description": "Status of the notification."
          }
        },
        "required": ["channel", "context", "status"]
      },
      "UpdateQueueDTO": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "example": "New Event",
            "description": "Subject of the notification."
          },
          "body": {
            "type": "string",
            "example": "Hello, this is a notification.",
            "description": "Body content of the notification."
          },
          "expiry": {
            "format": "date-time",
            "type": "string",
            "example": "2024-04-10T12:00:00Z",
            "description": "Timestamp when the notification expires."
          },
          "retries": {
            "type": "number",
            "example": 3,
            "description": "Number of retries attempted."
          },
          "last_attempted": {
            "format": "date-time",
            "type": "string",
            "example": "2024-04-02T10:00:00Z",
            "description": "Timestamp of the last attempted notification."
          },
          "status": {
            "type": "boolean",
            "example": false,
            "description": "Status of the notification."
          }
        },
        "required": [
          "subject",
          "body",
          "expiry",
          "retries",
          "last_attempted",
          "status"
        ]
      },
      "RolePermissionCreateDto": { "type": "object", "properties": {} }
    }
  }
}
